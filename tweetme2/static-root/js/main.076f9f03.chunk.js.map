{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/create.js","tweets/detail.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","actionDisplay","display","handleActionBackendEvent","type","className","onClick","event","preventDefault","tweet_id","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","isDetail","path","pathname","match","urlTweetId","handlePerformAction","newActionTweet","Fragment","TweetList","tweetinit","setTweetInit","tweets","setTweets","tweetDidSet","setTweetDidSet","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","tweetId","didLookup","setDidLookup","setTweet","handleBackendLookup","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","TweetEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.076f9f03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nfunction getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\n\r\nexport function backendLookup(method,endpoint,callback,data){\r\n  let jsonData;\r\n  if(data){\r\n    jsonData=JSON.stringify(data)\r\n    //console.log(\"Json data is \",jsonData)\r\n  }\r\n  const xhr=new XMLHttpRequest() //xhr=Someclass()('similar in python') \r\n  const url=`http://127.0.0.1:8000/api${endpoint}`\r\n  xhr.responseType=\"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method,url)\r\n  xhr.setRequestHeader('Content-Type','application/json')\r\n  if (csrftoken){\r\n    //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\",\"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\")\r\n    xhr.setRequestHeader('X-CSRFToken',csrftoken)\r\n  }\r\n  \r\n  xhr.onload=function(){\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n      }\r\n    }\r\n    callback(xhr.response,xhr.status)\r\n  }\r\n  xhr.onerror=(e)=>{\r\n    console.log(e)\r\n  }\r\n  xhr.send(jsonData)\r\n\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet,action,didPerformAction}=props\r\n    let likes=tweet.likes ? tweet.likes : 0\r\n    const actionDisplay=action.display ? action.display:\"Action\"\r\n    const handleActionBackendEvent = (response, status) =>{\r\n\r\n        if ((status === 200 || status===201)&& didPerformAction ){\r\n          didPerformAction(response,status)\r\n        }\r\n      }\r\n\r\n    const handleAction=(event)=>{\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id,action.type,handleActionBackendEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    const className=props.className ? props.className:'btn btn-primary btn-small'\r\n    return <button className={className} onClick={handleAction}>{display}</button>\r\n  }","\r\nimport  {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(data,callback){\r\n    \r\n    backendLookup('POST',\"/tweet/create-tweet\",callback,{content:data})\r\n    \r\n  }\r\n  \r\n  export function apiTweetAction(tweet_id,action,callback){\r\n    const data={id:tweet_id,action:action}\r\n    \r\n    backendLookup(\"POST\",\"/tweet/action\",callback,data)\r\n    }\r\n\r\n\r\n  export function apiTweetDetail(tweet_id,callback){\r\n    backendLookup(\"GET\",`/tweet/${tweet_id}`,callback)\r\n  }\r\n  export function apiTweetList(username,callback){\r\n    //This is to used to refresh the page after sometime without refreshing\r\n    let endpoint=\"/tweet\"\r\n    if(username){\r\n      endpoint=`/tweet?username=${username}`\r\n    }\r\n    backendLookup(\"GET\",endpoint,callback)\r\n    }","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\n\r\nexport function TweetCreate(props){\r\n  console.log(\"man form create mei hu\")\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n      if (status === 201){\r\n        didTweet(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // backend api request\r\n      apiTweetCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n        </form>\r\n  </div>\r\n}","import React, {useState}  from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <div className='row'>\r\n    <div className='col-11 mx-auto p-3 border rounded'>\r\n      <p className='mb-0 text-muted small'>Retweet</p>\r\n      <Tweet hideActions className={' '} tweet={tweet.parent} />\r\n    </div>\r\n    </div> : null\r\n  }\r\n  export function Tweet(props) {\r\n      const {tweet, didRetweet, hideActions} = props\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n      const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      //const path = window.location.pathname\r\n      //var idRegex = /(?<tweetid>\\d+)/\r\n      var isDetail=false\r\n      var path = window.location.pathname\r\n\r\n      if (path!='/'){\r\n      console.log(\"Path is \",path)\r\n      var match=path.match(/(\\d+)/)[0]\r\n\r\n      //const match = path.match(idRegex)\r\n      const urlTweetId = match ? match : -1\r\n      console.log(\"tweet.id and urlTweetId is \",tweet.id,urlTweetId)\r\n      isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n      }\r\n      \r\n      const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n      }\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n        \r\n      }\r\n      \r\n      return <div className={className}>\r\n              <div>\r\n                <p>{tweet.id} - {tweet.content}</p>\r\n                <ParentTweet tweet={tweet} />\r\n              </div>\r\n          <div className='btn btn-group'>\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                </React.Fragment>\r\n          }\r\n                  {isDetail===true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n       \r\n      </div>\r\n    }","import React,{useEffect,useState} from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\n\r\nexport function TweetList(props){\r\n    const [tweetinit,setTweetInit]=useState([])\r\n    const [tweets,setTweets]=useState([])\r\n    const [tweetDidSet,setTweetDidSet]=useState(false)\r\n    //setTweetInit(props.new_tweet.concat(tweetinit))\r\n    \r\n    \r\n\r\n    useEffect(()=>{\r\n      //console.log(\"Second one call hua \")\r\n      const final=[...props.newTweets].concat(tweetinit)\r\n      if (final.length!==tweets.length){\r\n        setTweets(final)\r\n      }\r\n    },[props.newTweets,tweets,tweetinit])\r\n\r\n    useEffect(()=>{\r\n        //console.log(\"First one call hua \")\r\n         if (tweetDidSet===false){\r\n           const callback=(response,status)=>{\r\n             if (status==200)\r\n             setTweetInit(response)\r\n             setTweetDidSet(true)\r\n           }\r\n       \r\n           apiTweetList(props.username,callback)\r\n       }\r\n         \r\n       },[tweetinit,tweetDidSet])\r\n  \r\n    \r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n     console.log(\"DidhandleTweet hai kya?\")\r\n      const updateTweetsInit = [...tweetinit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n  \r\n    return tweets.map((item,index)=>{\r\n      return <Tweet didRetweet={handleDidRetweet} tweet={item} className=\"my-5 py-5 border bg-white text-dark\" key={`${index}-{item.id}`} />\r\n     })\r\n  \r\n  }\r\n","import React, {useState, useEffect}  from 'react'\r\n\r\nimport {TweetCreate} from './create'\r\nimport {TweetList} from './list'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\n\r\nexport function TweetsComponent(props) {\r\n  console.log(\"helloooo\")\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) =>{\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n\r\n    }\r\n    if (canTweet ===false){\r\n      console.log(\"hiiiiiiiii\")\r\n    }\r\n\r\n    return <div className={props.className}>\r\n            {canTweet ===false && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetList newTweets={newTweets} {...props} />\r\n        </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId} = props\r\n  console.log('Tweet id is ',tweetId)\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    console.log(\"Response and status is \",response,status)\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if (didLookup === false){\r\n\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId,didLookup,setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n  \n          < TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent} from './tweets'\nimport {TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\n\nconst appEl=document.getElementById('root')\nif (appEl){\nReactDOM.render(\n    <App />,appEl\n \n)}\nconst e=React.createElement\nconst TweetEl=document.getElementById(\"tweetme-2\")\nif (TweetEl){\n  ReactDOM.render(e(TweetsComponent,TweetEl.dataset),TweetEl)\n};\n\nconst tweetDetailElements = document.querySelectorAll(\".tweet-me-2\")\n\ntweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), \n        container);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}